@import "../../themes/skyline.globals";

.line-tab-button {
  /**
   * @prop --background: Background of the tab button
   * @prop --background-focused: Background of the tab button when focused with the tab key
   * @prop --background-focused-opacity: Opacity of the tab button background when focused with the tab key
   *
   * @prop --color: Color of the tab button
   * @prop --color-focused: Color of the tab button when focused with the tab key
   * @prop --color-selected: Color of the selected tab button
   *
   * @prop --padding-top: Top padding of the tab button
   * @prop --padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the tab button
   * @prop --padding-bottom: Bottom padding of the tab button
   * @prop --padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the tab button
   *
   * @prop --ripple-color: Color of the button ripple effect
   */
  --ripple-color: var(--color-selected);
  --background-focused-opacity: 1;

  flex: 1;

  flex-direction: column;
  align-items: center;
  justify-content: center;

  height: 100%;

  outline: none;

  background: var(--background);
  color: var(--color);
}

// Tab Button: Native
// --------------------------------------------------

.line-tab-button .button-native {
  @include border-radius(inherit);
  @include margin(0);
  @include padding(var(--padding-top), var(--padding-end), var(--padding-bottom), var(--padding-start));
  @include text-inherit();

  display: flex;
  position: relative;

  flex-direction: inherit;
  align-items: inherit;
  justify-content: inherit;

  width: 100%;
  height: 100%;

  border: 0;

  outline: none;

  background: transparent;

  text-decoration: none;

  cursor: pointer;
  overflow: hidden;
  box-sizing: border-box;
  -webkit-user-drag: none;
}

.line-tab-button .button-native::after {
  @include button-state();
}

.line-tab-button .button-inner {
  display: flex;
  position: relative;

  flex-flow: inherit;
  align-items: inherit;
  justify-content: inherit;

  width: 100%;
  height: 100%;

  z-index: 1;
}

// Tab Button: States
// --------------------------------------------------

.line-tab-button.line-focused .button-native {
  color: var(--color-focused);

  &::after {
    background: var(--background-focused);

    opacity: var(--background-focused-opacity);
  }
}

@media (any-hover: hover) {
  .line-tab-button .button-native:hover {
    color: var(--color-selected);
  }
}

.line-tab-button.tab-selected {
  color: var(--color-selected);
}

.line-tab-button.tab-hidden {
  /* stylelint-disable-next-line declaration-no-important */
  display: none !important;
}

.line-tab-button.tab-disabled {
  pointer-events: none;

  opacity: .4;
}


// Tab Button: Label / Icon
// --------------------------------------------------

.line-tab-button .slotted.line-label,
.line-tab-button .slotted.line-icon {
  display: block;

  align-self: center;

  max-width: 100%;

  text-overflow: ellipsis;

  white-space: nowrap;

  overflow: hidden;
  box-sizing: border-box;
}

.line-tab-button .slotted.line-label {
  order: 0;
}

.line-tab-button .slotted.line-icon {
  order: -1;

  height: 1em;
}


.line-tab-button.line-tab-button--has-label-only .slotted.line-label {
  white-space: normal;
}


// Tab Button: Badge
// --------------------------------------------------

.line-tab-button .slotted.line-badge {
  box-sizing: border-box;

  position: absolute;

  z-index: 1;
}


// Tab Button: Layout
// --------------------------------------------------

.line-tab-button.tab-layout-icon-start {
  flex-direction: row;
}

.line-tab-button.tab-layout-icon-end {
  flex-direction: row-reverse;
}

.line-tab-button.tab-layout-icon-bottom {
  flex-direction: column-reverse;
}

.line-tab-button.tab-layout-icon-hide .slotted.line-icon {
  display: none;
}

.line-tab-button.tab-layout-label-hide .slotted.line-label {
  display: none;
}

.line-tab-button .line-ripple-effect {
  color: var(--ripple-color);
}
