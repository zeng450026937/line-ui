.line-item-divider {
  /**
   * @prop --background: Background of the item divider
   *
   * @prop --color: Color of the item divider
   *
   * @prop --padding-top: Top padding of the item divider
   * @prop --padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the item divider
   * @prop --padding-bottom: Bottom padding of the item divider
   * @prop --padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the item divider
   *
   * @prop --inner-padding-top: Top inner padding of the item divider
   * @prop --inner-padding-end: End inner padding of the item divider
   * @prop --inner-padding-bottom: Bottom inner padding of the item divider
   * @prop --inner-padding-start: Start inner padding of the item divider
   */
  --padding-top: 0px;
  --padding-end: 0px;
  --padding-bottom: 0px;
  --padding-start: 0px;
  --inner-padding-top: 0px;
  --inner-padding-end: 0px;
  --inner-padding-bottom: 0px;
  --inner-padding-start: 0px;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  margin-left: 0;
  margin-right: 0;
  margin-top: 0;
  margin-bottom: 0;
  padding-left: calc(var(--padding-start) + var(--line-safe-area-left, 0px));
  padding-right: var(--padding-end);
  padding-top: var(--padding-top);
  padding-bottom: var(--padding-bottom);
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
  min-height: 30px;
  background: var(--background);
  color: var(--color);
  font-family: var(--line-font-family, inherit);
  overflow: hidden;
  z-index: 100;
  box-sizing: border-box;
}
@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {
  .line-item-divider {
    padding-left: unset;
    padding-right: unset;
    padding-inline-start: calc(var(--padding-start) + var(--line-safe-area-left, 0px));
    padding-inline-end: var(--padding-end);
  }
}

.line-item-divider.line-color {
  background: var(--line-color-base);
  color: var(--line-color-contrast);
}

.line-item-divider--sticky {
  position: sticky;
  top: 0;
}

.line-item-divider__inner {
  margin-left: 0;
  margin-right: 0;
  margin-top: 0;
  margin-bottom: 0;
  padding-left: var(--inner-padding-start);
  padding-right: calc(var(--line-safe-area-right, 0px) + var(--inner-padding-end));
  padding-top: var(--inner-padding-top);
  padding-bottom: var(--inner-padding-bottom);
  display: flex;
  flex: 1;
  flex-direction: inherit;
  align-items: inherit;
  align-self: stretch;
  min-height: inherit;
  border: 0;
  overflow: hidden;
}
@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {
  .line-item-divider__inner {
    padding-left: unset;
    padding-right: unset;
    padding-inline-start: var(--inner-padding-start);
    padding-inline-end: calc(var(--line-safe-area-right, 0px) + var(--inner-padding-end));
  }
}

.line-item-divider__wrapper {
  display: flex;
  flex: 1;
  flex-direction: inherit;
  align-items: inherit;
  align-self: stretch;
  text-overflow: ellipsis;
  overflow: hidden;
}